---
globs: *.vue,*.ts,*.js
description: Порядок импортов в файлах
---

# Порядок импортов

## Правило порядка импортов

Импорты должны быть упорядочены от общих к частным:

1. **Vue** - импорты из Vue
2. **Внешние библиотеки** - npm пакеты
3. **Shared** - общие ресурсы проекта
4. **Widgets** - виджеты
5. **Features** - функциональности
6. **Entities** - сущности
7. **Относительные импорты** - `../`, `./`

## Разделение групп импортов

Если импортов много, разделяй группы пустой строкой.

## Пример правильного порядка

```typescript
// 1. Vue импорты
import { ref, computed, onMounted, watch } from "vue";
import { defineStore } from "pinia";

// 2. Внешние библиотеки
import { Button, Table, Form, Modal } from "ant-design-vue";
import { Search, Plus, Edit, Trash2 } from "lucide-vue-next";
import { notification } from "ant-design-vue";

// 3. Shared ресурсы
import { useApi } from "@/shared/api";
import { errorNotify } from "@/shared/utils";
import type { ResponseData } from "@/shared/api/Types";

// 4. Widgets
import { UserTable } from "@/widgets/user-table";

// 5. Features
import { useUserPermissions } from "@/features/user-permissions";

// 6. Entities
import { useUserStore } from "@/entities/user";
import type { User } from "@/entities/user/model/Types";

// 7. Относительные импорты
import { validateForm } from "../utils";
import type { ComponentProps } from "./types";
import UserCard from "./UserCard.vue";
```

## Правила внутри групп

- Внутри каждой группы импорты сортируются по алфавиту
- Type-only импорты (`import type`) идут после обычных импортов в той же группе
- Default импорты идут после named импортов

## Пример с разделением групп

```typescript
// Vue
import { ref, computed } from "vue";

// Внешние библиотеки
import { Button, Table } from "ant-design-vue";
import { Search } from "lucide-vue-next";

// Shared
import { useApi } from "@/shared/api";
import type { ApiResponse } from "@/shared/api/Types";

// Entities
import { useUserStore } from "@/entities/user";

// Относительные
import UserForm from "./UserForm.vue";
```

## Исключения

- Если импорт очень длинный и нарушает читаемость, можно вынести его на отдельную строку
- Комментарии к импортам не нужны (можно только в исключительных случаях)
- Динамические импорты (`import()`) не подчиняются этому правилу
